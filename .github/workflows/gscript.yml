
name: Automated Issue Management


on:
  issues:
    types: [closed]
  pull_request_review:
    types: [submitted]

jobs:
  issue-closed:
    runs-on: ubuntu-latest
    steps:
      - name: Comment on closed issue
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = 'The issue is now resolved.';
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            await octokit.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: comment
            });

  congratulate-on-first-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Check if it's the user's first pull request
        id: first-pr
        run: |
          if [ $(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/search/issues?q=type:pr+author:${{ github.event.pull_request.user.login }}+is:merged | jq -r '.total_count') -eq 1 ]; then
            echo "::set-output name=first_pr::true"
          else
            echo "::set-output name=first_pr::false"
          fi
      - name: Congratulate user on first pull request
        if: steps.first-pr.outputs.first_pr == 'true'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const author = context.payload.pull_request.user.login;
            const comment = 'Congratulations on opening your first pull request! :tada:';
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            await octokit.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
